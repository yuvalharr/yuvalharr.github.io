data("airquality")
airquality?
data("airquality")
?airquality
aq <- data("airquality")
aq <- data.frame(aq)
View(aq)
aq <- data("airquality")
aq
aq <- data.frame(data("airquality"))
data("airquality")
aq <- data.frame("airquality")
View(aq)
aq <- data.frame(airquality)
View(aq)
#3----
colMeans(aq)
#3----
colMeans(aq, na.rm = T)
View(aq)
#4----
aggregate.data.frame(aq, by= "Month", mean)
#4----
aggregate.data.frame(aq, by= "Month", y=mean)
#4----
aggregate.data.frame(aq, by= "Month", Fun = mean(y))
#4----
aggregate(aq)
#4----
aggregate("aq")
typeof(aq)
View(aq)
#4----
aggregate(aq[, 1], list(aq$Month), mean)
#4----
aggregate(aq[, 2], list(aq$Month), mean)
#4----
aggregate(aq[, 1], list(aq$Month), mean)
#4----
aggregate(aq[, 1], list(aq$Month), mean(na.rm = T))
#4----
aggregate(aq[, 4], list(aq$Month), mean)
#4----
aggregate(aq[, 1], by = list(aq$Month), FUN = mean, na.rm = TRUE)
#4----
aggregate(aq[, Ozone], by = list(aq$Month), FUN = mean, na.rm = TRUE)
#4----
aggregate(aq[, "Ozone"], by = list(aq$Month), FUN = mean, na.rm = TRUE)
aggregate(aq[, "Temp"], by = list(aq$Month), FUN = mean, na.rm = TRUE)
aq$zOzone <- scale(aq$Ozone)
View(aq)
aq$zTemp <- scale(aq$Temp)
View(aq)
#6---
hist(aq$Solar.R)
hist(aq$Solar.R)
#6---
hist(aq$Solar.R, main = "Solar radiation by number of days", xlab = "Solar radiation", ylab = "Frequency")
library(ggplot2)
#7----
geom_point(data = aq, na.rm = TRUE)
#7----
geom_point(data = aq, na.rm = TRUE, mapping = aes())
ggplot(aq, aes(x = Solar.R)) +
geom_histogram(bins = 15)
ggplot(aq, aes(x = Solar.R)) +
geom_point()
ggplot(aq, aes(x = Solar.R)) +
geom_point(data = frequency())
ggplot(aq, aes(x = Solar.R)) +
geom_point(data = freq)
ggplot(aq, aes(x = Solar.R, y = frequency(Solar.R))) +
geom_point()
ggplot(aq, aes(x = zTemp, y = zOzone)) +
geom_point()
geom_point(data = aq, na.rm = TRUE)
#7----
ggplot(aq, aes(x = zTemp, y = zOzone)) +
geom_point() +
stat_smooth(group = 1, method = "lm")
#7----
ggplot(aq, aes(x = zTemp, y = zOzone)) +
geom_point() +
stat_smooth(method = "lm")
#7----
ggplot(aq, aes(x = zTemp, y = zOzone)) +
geom_point() +
stat_smooth(group = 1)
#7----
ggplot(aq, aes(x = zTemp, y = zOzone)) +
geom_point() +
stat_smooth(group = 1, method = lm)
ggplot(aq, aes(x = Temp, y = Ozone)) +
geom_point() +
stat_smooth(group = 1, method = lm)
#7----
ggplot(aq, aes(x = Temp, y = Ozone)) +
geom_point() +
stat_smooth(group = 1, method = lm) +
#8----
lm(zTemp ~ zOzone, aq)
cor.test(aq$Temp, aq$Ozone)
#7----
ggplot(aq, aes(x = Temp, y = Ozone)) +
geom_point() +
stat_smooth(group = 1, method = lm) +
#8----
lm(x ~ y, aq)
#7----
ggplot(aq, aes(x = Temp, y = Ozone)) +
geom_point() +
stat_smooth(group = 1, method = lm) +
#8----
lm(aq$zTemp ~ aq$zOzone, aq)
#7----
ggplot(aq, aes(x = Temp, y = Ozone)) +
geom_point() +
stat_smooth(group = 1, method = lm) +
#8----
lm(x= aq$zTemp, y=aq$zOzone, aq)
#7----
ggplot(aq, aes(x = Temp, y = Ozone)) +
geom_point() +
stat_smooth(group = 1, method = lm) +
#8----
lm(x= aq$zTemp, y=aq$zOzone, aq, na.action = na.exclude)
#7----
ggplot(aq, aes(x = Temp, y = Ozone)) +
geom_point() +
stat_smooth(group = 1, method = lm) +
#8----
lm(x= aq$zTemp, y=aq$zOzone, aq, na.action = F)
#7----
ggplot(aq, aes(x = Temp, y = Ozone)) +
geom_point() +
stat_smooth(group = 1, method = lm) +
#8----
lm(aq$zTemp ~ aq$zOzone, aq, na.action = F)
#7----
ggplot(aq, aes(x = Temp, y = Ozone)) +
geom_point() +
stat_smooth(group = 1, method = lm) +
#8----
lm(zTemp ~ zOzone, aq)
#7----
ggplot(aq, aes(x = Temp, y = Ozone)) +
geom_point() +
stat_smooth(group = 1, method = lm) +
lm(zTemp ~ zOzone, aq)
aq
#7----
ggplot(aq, aes(x = Temp, y = Ozone)) +
geom_point() +
stat_smooth(group = 1, method = lm) +
#8----
lm(zTemp ~ zOzone, aq, na.action = F)
#7----
ggplot(aq, aes(x = Temp, y = Ozone)) +
geom_point() +
stat_smooth(group = 1, method = lm) +
#8----
lm(zTemp ~ zOzone, aq, na.omit)
#7----
ggplot(aq, aes(x = Temp, y = Ozone)) +
geom_point() +
stat_smooth(group = 1, method = lm) +
#8----
lm(zTemp ~ zOzone, aq, na.omit())
#7----
ggplot(aq, aes(x = Temp, y = Ozone)) +
geom_point() +
stat_smooth(group = 1, method = lm) +
#8----
lm(zTemp ~ zOzone, aq, na.action=na.omit)
#7----
ggplot(aq, aes(x = Temp, y = Ozone)) +
geom_point() +
stat_smooth(group = 1, method = lm) +
lm(zTemp ~ zOzone, aq, na.action=na.omit)
#7----
ggplot(aq, aes(x = Temp, y = Ozone)) +
geom_point() +
stat_smooth(group = 1, method = lm) +
lm(zTemp ~ zOzone)
#7----
ggplot(aq, aes(x = Temp, y = Ozone)) +
geom_point() +
stat_smooth(group = 1, method = lm) +
lm(zTemp ~ zOzone, aq)
#7----
ggplot(aq, aes(x = Temp, y = Ozone)) +
geom_point() +
stat_smooth(group = 1, method = lm) +
#8----
aa <- lm(zTemp ~ zOzone, aq)
summary(aa)
#7----
ggplot(aq, aes(x = Temp, y = Ozone)) +
geom_point() +
stat_smooth(group = 1, method = lm) +
#8----
aa <- lm(zTemp ~ zOzone, aq)
#7----
ggplot(aq, aes(x = Temp, y = Ozone)) +
geom_point() +
stat_smooth(group = 1, method = lm) +
#8----
(aa <- lm(zTemp ~ zOzone, aq))
View(aa)
ggplot(aq, aes(x = Temp, y = Ozone)) +
geom_point() +
stat_smooth(group = 1, method = lm) +
#7----
ggplot(aq, aes(x = Temp, y = Ozone)) +
geom_point() +
stat_smooth(group = 1, method = lm) +
#8----
(aa <- lm(zTemp ~ zOzone, aq))
aa <- lm(zTemp ~ zOzone, aq)
plot(aa)
aa <- lm(zTemp ~ zOzone, aq)
aa <- lm(zTemp ~ zOzone, aq)
aa <- lm(zTemp ~ zOzone, aq)
plot(aa)
#1----
data("airquality")
#2----
aq <- data.frame(airquality)
#3----
colMeans(aq, na.rm = T)
#4----
aggregate(aq[, "Ozone"], by = list(aq$Month), FUN = mean, na.rm = TRUE) #Ozone mean by month
aggregate(aq[, "Temp"], by = list(aq$Month), FUN = mean, na.rm = TRUE) #Temp mean by month
#5----
aq$zOzone <- scale(aq$Ozone)
aq$zTemp <- scale(aq$Temp)
#6----
hist(aq$Solar.R, main = "Solar radiation by number of days", xlab = "Solar radiation", ylab = "Frequency")
#7----
ggplot(aq, aes(x = Temp, y = Ozone)) +
geom_point() +
stat_smooth(group = 1, method = lm)
aa <- lm(zTemp ~ zOzone, aq)
plot(aa, which = 1:6)
aa <- lm(zTemp ~ zOzone, data=aq)
summary(aa)
#8----
aa <- lm(zTemp ~ zOzone, data=aq)
#8----
aa <- lm(zTemp ~ zOzone, aq)
library(ggplot2)
#1----
data("airquality")
#2----
aq <- data.frame(airquality)
#3----
colMeans(aq, na.rm = T)
#4----
aggregate(aq[, "Ozone"], by = list(aq$Month), FUN = mean, na.rm = TRUE) #Ozone mean by month
aggregate(aq[, "Temp"], by = list(aq$Month), FUN = mean, na.rm = TRUE) #Temp mean by month
#5----
aq$zOzone <- scale(aq$Ozone)
aq$zTemp <- scale(aq$Temp)
#6----
hist(aq$Solar.R, main = "Solar radiation by number of days", xlab = "Solar radiation", ylab = "Frequency")
#7----
ggplot(aq, aes(x = Temp, y = Ozone)) +
geom_point() +
stat_smooth(group = 1, method = lm)
#8----
lm8 <- lm(zTemp ~ zOzone, data = aq)
summary(lm8)
lm9 <- lm(zOzone ~ zTemp, data = aq)
summary(lm9)
library(ggplot2)
#1----
data("airquality")
#2----
aq <- data.frame(airquality)
#3----
colMeans(aq, na.rm = T)
#4----
aggregate(aq[, "Ozone"], by = list(aq$Month), FUN = mean, na.rm = TRUE) #Ozone mean by month
aggregate(aq[, "Temp"], by = list(aq$Month), FUN = mean, na.rm = TRUE) #Temp mean by month
#5----
aq$zOzone <- scale(aq$Ozone)
aq$zTemp <- scale(aq$Temp)
#6----
hist(aq$Solar.R, main = "Solar radiation by number of days", xlab = "Solar radiation", ylab = "Frequency")
#7----
ggplot(aq, aes(x = Temp, y = Ozone)) +
geom_point() +
stat_smooth(group = 1, method = lm)
#8----
lm8 <- lm(zOzone ~ zTemp, data = aq)
summary(lm8)
a = rnorm (30 , 2138, sd = 823)
plot (a)
a = dnorm (30 , 2138, sd = 823)
a
a = rnorm (30 , 2138, sd = 823)
plot (a)
a
typeof (a)
sort (a)
a <-sort (a)
a
plot
plot (a)
a[1]
for i in 1:30 {
b[i] = rnorm (50, a[i], sd = 823)
}
a = rnorm (30 , 2138, sd = 823)
a <-sort (a)
plot (a)
for i in 1:30 {
b[i] = rnorm (50, a[i], sd = 823)
}
b = []
b
b = ()
b = list()
for i in 1:30 {
b[i] = rnorm (50, a[i], sd = 823)
}
for i in 1:30 {
print a[i]
}
a[1]
a[2]
for i in 1:30 {
print a[i];
}
for (i in 1:30) {
print a[i]
}
for (i in 1:30) {
print a[i]
}
for (i in 1:30) {
print a[i]}
for (i in 1:30) {
for (i in 1:30) {
print a[i]
}
for (i in 1:30) {
print a[i]
}
for (i in a) {
print a
}
print ("a")
for (i in 1:3) {
print ("a")
}
a = rnorm (30 , 2138, sd = 823)
a <-sort (a)
plot (a)
for (i in a) {
print (i)
}
for (i in a) {
b[i] = rnorm (50, a , sd = 500)
}
b
plot (b)
mean BT = rnorm (30 , 2138, sd = 823)
mean BT <-sort (mean BT)
plot (mean BT)
mean_BT = rnorm (30 , 2138, sd = 823)
mean_BT <-sort (mean_BT)
plot (mean_BT)
mean_BT = rnorm (30 , 2138, sd = 823)
mean_BT <-sort (mean_BT)
plot (mean_BT)
plot (mean_BT , xlab = "Face order on priority dimension", ylab = "Average BT", main = "Average Breaking Time of each face")
plot (mean_BT , xlab = "Face order on priority dimension", ylab = "Average BT (ms)", main = "Average Breaking Time of each face")
plot (mean_BT , xlab = "Face order on priority dimension", ylab = "Average BT (ms)", main = "Fig 2. Average Breaking Time of each face")
mean_eye = rnorm (30 , 1000, sd = 400)
mean_eye <-sort (mean_eye)
plot (mean_eye)
plot (mean_BT , xlab = "Face order on priority dimension", ylab = "Average BT (ms)", main = "Fig 2. Average Breaking Time of each face")
points(mean_eye)
mean_BT
plot (mean_BT , xlab = "Face order on priority dimension", ylab = "Average BT (ms)", main = "Fig 2. Average Breaking Time of each face", ylim = c(400, 4050)) )
points(mean_eye)
plot (mean_BT , xlab = "Face order on priority dimension", ylab = "Average BT (ms)", main = "Fig 2. Average Breaking Time of each face", ylim = c(400, 4050))
points(mean_eye)
plot (mean_BT , xlab = "Face order on priority dimension", ylab = "Average BT (ms)", main = "Fig 2. Average Breaking Time of each face", ylim = c(400, 4050))
points(mean_eye, col = "blue")
plot (mean_BT ,col = "green", xlab = "Face order on priority dimension", ylab = "Average BT (ms)", main = "Fig 2. Average Breaking Time of each face", ylim = c(400, 4050))
points(mean_eye, col = "blue")
plot (mean_BT ,col = "green3", xlab = "Face order on priority dimension", ylab = "Average BT (ms)", main = "Fig 2. Average Breaking Time of each face", ylim = c(400, 4050))
points(mean_eye, col = "blue")
plot (mean_BT ,col = "green6", xlab = "Face order on priority dimension", ylab = "Average BT (ms)", main = "Fig 2. Average Breaking Time of each face", ylim = c(400, 4050))
points(mean_eye, col = "blue")
plot (mean_BT ,col = "green2", xlab = "Face order on priority dimension", ylab = "Average BT (ms)", main = "Fig 2. Average Breaking Time of each face", ylim = c(400, 4050))
points(mean_eye, col = "blue")
plot (mean_BT ,col = "cyan", xlab = "Face order on priority dimension", ylab = "Average BT (ms)", main = "Fig 2. Average Breaking Time of each face", ylim = c(400, 4050))
points(mean_eye, col = "blue")
plot (mean_BT ,col = "green4", xlab = "Face order on priority dimension", ylab = "Average BT (ms)", main = "Fig 2. Average Breaking Time of each face", ylim = c(400, 4050))
points(mean_eye, col = "blue")
plot (mean_BT ,col = "green5", xlab = "Face order on priority dimension", ylab = "Average BT (ms)", main = "Fig 2. Average Breaking Time of each face", ylim = c(400, 4050))
points(mean_eye, col = "blue")
plot (mean_BT ,col = "green4", xlab = "Face order on priority dimension", ylab = "Average BT (ms)", main = "Fig 2. Average Breaking Time of each face", ylim = c(400, 4050))
points(mean_eye, col = "blue")
plot (mean_BT ,col = "green4", xlab = "Face order on priority dimension", ylab = "Time from trial onset (ms)", main = "Fig 2. Average Breaking Time of each face", ylim = c(400, 4050))
points(mean_eye, col = "blue")
plot (mean_BT ,col = "green4", xlab = "Face order on priority dimension", ylab = "Time from trial onset (ms)", main = "Fig 2. Average BTs and eye fixation for each face", ylim = c(400, 4050))
points(mean_eye, col = "blue")
plot (mean_BT ,col = "green4", xlab = "Face order on priority dimension", ylab = "Time from trial onset (ms)", main = "Fig 2. Average BTs and eye fixation for each face", ylim = c(400, 4050))
points(mean_eye, col = "blue")
legend(5, 3000, legend=c("BT", "Eye fixation"),
col=c("green4", "blue"), lty=1:2, cex=0.8)
plot (mean_BT ,col = "green4", xlab = "Face order on priority dimension", ylab = "Time from trial onset (ms)", main = "Fig 2. Average BTs and eye fixation for each face", ylim = c(400, 4050))
points(mean_eye, col = "blue")
legend(0, 4000, legend=c("BT", "Eye fixation"),
col=c("green4", "blue"), cex=0.8)
plot (mean_BT ,col = "green4", xlab = "Face order on priority dimension", ylab = "Time from trial onset (ms)", main = "Fig 2. Average BTs and eye fixation for each face", ylim = c(400, 4050))
points(mean_eye, col = "blue")
legend(0, 4000, legend=c("BT", "Eye fixation"),
col=c("green4", "blue"), lty=1:2, cex=0.8)
plot (mean_BT ,col = "green4", xlab = "Face order on priority dimension", ylab = "Time from trial onset (ms)", main = "Fig 2. Average BTs and eye fixation for each face", ylim = c(400, 4050))
points(mean_eye, col = "blue")
legend(0, 4000, legend=c("BT", "Eye fixation"),
col=c("green4", "blue"), lty=1:2)
plot (mean_BT ,col = "green4", xlab = "Face order on priority dimension", ylab = "Time from trial onset (ms)", main = "Fig 2. Average BTs and eye fixation for each face", ylim = c(400, 4050))
points(mean_eye, col = "blue")
legend(0, 4000, legend=c("BT", "Eye fixation"),
col=c("green4", "blue"), lty=1)
cor.test(mean_BT, mean_eye)
#2
mean_eye_2 = rnorm (30 , 1100, sd = 500)
mean_eye_2 <- sort(mean_eye_2)
plot (mean_eye_2)
mean_eye_2 = rnorm (30 , 1100, sd = 500)
mean_eye_2 <- sort(mean_eye_2)
plot (mean_eye_2)
mean_eye_2 = rnorm (30 , 1000, sd = 400)
mean_eye_2 <- sort(mean_eye_2)
plot (mean_eye_2)
mean_eye_2 = rnorm (30 , 1000, sd = 400)
mean_eye_2 <- sort(mean_eye_2)
plot (mean_eye_2)
mean_eye_2 = rnorm (30 , 1000, sd = 400)
mean_eye_2 <- sort(mean_eye_2)
plot (mean_eye_2)
mean_eye_2 = rnorm (30 , 1000, sd = 400)
mean_eye_2 <- sort(mean_eye_2)
plot (mean_eye_2)
mean_eye_2 = rnorm (30 , 1000, sd = 400)
mean_eye_2 <- sort(mean_eye_2)
plot (mean_eye_2)
plot (mean_eye_2, col = "purple", xlab = "Face order on priority dimension", ylab = "Time from trial onset (ms)", main = "Fig 3. Average eye fixation for each face (non-conscious trials)")
legend(0, 4000, legend=c("BT", "Eye fixation"),
col=c("green4", "blue"), lty=1)
library(data.table)
library(ggplot2)
theme_set(theme_bw())
library(rjson)
library(ez)
library(plyr)
library(Hmisc)
setwd ("C:/Users/yuval/Desktop/lab/Thesis/yuvalharr.github.io")
dt <- fread('pilot_10.csv')
dt <- dt[, rt:=as.double(rt)] # make rt column as double instead of string
dt <- dt[, acc:=as.double(acc)] # make rt column as double instead of string
only_brms <- dt[trial_type == 'bRMS']
trialCount <- only_brms[, .(trials = .N), by = run_id]
trialCount <- trialCount[trials >= 48] # minimum of brms trials needed to finish exp
good_pps <- dt[run_id %in% trialCount$run_id] # keep only subjects who finished all brms trials
View(good_pps)
View(good_pps)
View(only_brms)
View(good_pps)
View(good_pps)
