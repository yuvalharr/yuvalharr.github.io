# Keep only correct trials
only_brms <- only_brms[acc == 1]
# Exclude short trials
only_brms <- only_brms[rt > 200]
# Exclude long trials
only_brms <- only_brms[rt < 30000]
# keep only subjects with >30 correct trials (sufficiant for NPS accuracy)
trialCount <- only_brms[, .(trials = .N), by = id]
trialCount <- trialCount[trials >= 30]
only_brms <- only_brms[id %in% trialCount$id]
only_animation <- only_animation[id %in% trialCount$id]
# Exclude outlier trials per subject
only_brms[, zrt := scale(rt), by = id]  #ask yaniv: should i scale again after removing extreme z scores?
only_brms <- only_brms[abs(zrt) < 3]
brms_summary <- only_brms[, .(brms_rt = mean(rt), distance = mean(distance)), by = id]
# Clean CB data -------
only_animation[is.na(rt), success := NA] # make all 60 s trials unanswered instead of FALSE (or TRUE)
cb_num_wrongs <- only_animation[,.(cb_num_wrongs = sum(success == FALSE, na.rm = T)), by = id] # count number of wrong answers with response
only_animation <- only_animation[success == TRUE | is.na(success)] # remove all false trials with response ("guesses")
cb_acc <- only_animation[,.(cb_acc = sum(success == TRUE, na.rm = TRUE)/30), by = id] # returns cb correct rate (after removal of false guesses)
cb_rt <- only_animation[success == TRUE, .(cb_rt = mean(rt, na.rm = T)), by = id]
only_animation[is.na(success), rt := 60000]
cb_rt_with_unanswered_trials <- only_animation[, .(cb_rt_with_unfinished = mean(rt, na.rm = T)), by = id]
cb_summary <- merge(cb_rt, cb_acc) %>%
merge(cb_num_wrongs) %>%
merge(cb_rt_with_unanswered_trials)
all_summary <- merge(brms_summary, cb_summary, by = 'id')
only_animation <- merge(all_summary[,.(brms_rt, id)], only_animation) # add mean brms score for each sbj
boxplot(rt~id, data= only_animation)
boxplot(rt~id, data= only_brms)
# Violin plot for BRMS average RT per subject
p <- ggplot(brms_summary, aes(x=as.factor(1), y=brms_rt)) +
geom_violin()
p + geom_jitter(shape=16, position=position_jitter(0.03)) +
stat_summary(fun.y=mean, geom="point", shape=23, size=3, color = "red")
p2 <- ggplot(cb_summary, aes(x=as.factor(1), y=cb_rt)) +
geom_violin()
p2 + geom_jitter(shape=16, position=position_jitter(0.03)) +
stat_summary(fun.y=mean, geom="point", shape=23, size=3, color = "red")
p3 <- ggplot(cb_summary, aes(x=as.factor(1), y=cb_rt_with_unfinished)) +
geom_violin()
p3 + geom_jitter(shape=16, position=position_jitter(0.03)) +
stat_summary(fun.y=mean, geom="point", shape=23, size=3, color = "red")
# histogram of average CB RT including unanswered trials as 60 s
h = hist(cb_summary$cb_rt_with_unfinished/1000, breaks = c(seq(from = 0, to = 30, by = 2.5)), plot = F) # or hist(x,plot=FALSE) to avoid the plot of the histogram
h$density = h$counts/sum(h$counts)*100
plot(h,freq=FALSE)
abline(v = mean(cb_summary$cb_rt_with_unfinished/1000), col = 'red')
# histogram of average CB RT *not* including unanswered trials
h = hist(cb_summary$cb_rt/1000, breaks = c(seq(from = 0, to = 30, by = 2.5)), plot = F) # or hist(x,plot=FALSE) to avoid the plot of the histogram
h$density = h$counts/sum(h$counts)*100
plot(h,freq=FALSE)
abline(v = mean(cb_summary$cb_rt/1000), col = 'red')
# Connection between CB acc and CB RT
cor.test(all_summary$cb_rt, all_summary$cb_rt_with_unfinished)
ggplot(all_summary, aes(x = cb_rt, y = cb_rt_with_unfinished)) +
geom_point() +
geom_smooth(method='lm')
cor.test(all_summary$cb_rt, all_summary$cb_acc)
ggplot(all_summary, aes(x = cb_rt, y = cb_acc)) +
geom_point() +
geom_smooth(method='lm')
cor.test(all_summary$cb_rt_with_unfinished, all_summary$cb_acc)
ggplot(all_summary, aes(x = cb_rt_with_unfinished, y = cb_acc)) +
geom_point() +
geom_smooth(method='lm')
# Make BRMS quentiles
library(dplyr)
all_summary$brms_quentile <- ntile(all_summary$brms_rt, 10)
only_animation <- merge(only_animation, all_summary[, c("id","brms_quentile")], by="id")
# MAKE CB CUMULATIVE % CORRECT GRAPH PER SUBJECT ----
only_animation[is.na(success), rt := 99999] # make all unanswered trials have like infinate rt for asimptote in 60 s
only_animation <- only_animation[, brms_rt:=as.double(brms_rt)] # make rt column as double instead of string
mid <- mean(all_summary$brms_rt)
d.f <- arrange(only_animation,brms_rt,rt)
d.f.ecdf <- ddply(d.f, .(brms_rt), transform, ecdf=ecdf(rt)(rt) )
p <- ggplot( d.f.ecdf, aes(rt, ecdf, group = brms_quentile, colour = brms_rt))
p + geom_line() + coord_cartesian(xlim = c(0, 60000), ylim = c(0, 1)) + scale_color_gradient2( low = "red", midpoint = mid, mid = "white",  #can use scale_color_gradient2 as well
high = "black", space = "Lab" ) +
ggtitle('Accumulated CB proportion correct at each time point per participant') +
xlab ('Cut-off point (ms)') + ylab ('% Correct')
library(data.table)
library(ggplot2)
install.packages("rlang")
library(data.table)
library(ggplot2)
install.packages(
"ggplot2",
repos = c("http://rstudio.org/_packages",
"http://cran.rstudio.com")
)
library(ggplot2)
install.packages("ellipsis")
library(ggplot2)
library(data.table)
library(ggplot2)
theme_set(theme_bw())
library(rjson)
library(ez)
install.packages("zip")
library(rjson)
library(ez)
library(plyr)
library(dplyr)
library(Hmisc)
INITIAL DATA PREPERATION ----
setwd ("C:/Users/yuval/Desktop/lab/Thesis/yuvalharr.github.io")
dt <- read.csv('10.1.csv')
dt <- as.data.table(dt)
dt <- dt[, run_id:=as.numeric(as.character(run_id))] # make run_id numeric for taking minimum later
dt <- dt[, .SD[run_id == min(run_id)], by = id] # keep only min run_id for each pp. Removes multiple runs for some pps.
dt <- dt[dt$experiment_finished == 'true', ] # keep only finished experiments
dt = subset(dt, select = -c(condition.1)) # remove one 'condition' column (for some reason there are two)
#dt2 = subset(dt2, select = -c(condition)) # remove one 'condition' column (for some reason there are two)
#dt <- rbind(dt, dt2)
# Convert column types
dt <- dt[, rt:=as.double(as.character(rt))] # make rt column as double instead of string
dt <- dt[, acc:=as.numeric(as.character(acc))]
dt <- dt[, time_elapsed:=as.double(as.character(time_elapsed))]
dt <- dt[, distance:=as.double(as.character(distance))]
dt <- dt[, bProblem:=as.double(as.character(bProblem))]
dt <- dt[, sProblem:=as.double(as.character(sProblem))]
dt <- dt[, trial:=as.numeric(as.character(trial))]
dt <- dt[, cb_trial:=as.numeric(as.character(cb_trial))]
dt <- dt[, id:=as.factor(id)] # make id column as factor instead of string
dt <- dt[, training:=as.logical(as.character(training))]
dt <- dt[, success:=as.logical(as.character(success))]
summary(dt)
# make two dt's of brms and CB
only_animation <- dt[trial_type == 'animation'] # take only animation trials
only_animation <- dt[cb_trial >= 1] # discard demo trials
only_brms <- dt[trial_type == 'bRMS']
only_brms <- only_brms[is.na(training),] # discard demo trials
# Clean brms data -------
# Keep only trials with good animation
only_brms <- only_brms[bProblem == 0 & sProblem < 5]
# keep only subjects with 33 good trials (75%)
trialCount <- only_brms[, .(trials = .N), by = id]
trialCount <- trialCount[trials >= 33]
only_brms <- only_brms[id %in% trialCount$id]
# Keep only correct trials
only_brms <- only_brms[acc == 1]
# Exclude short trials
only_brms <- only_brms[rt > 200]
# Exclude long trials
only_brms <- only_brms[rt < 30000]
# keep only subjects with >30 correct trials (sufficiant for NPS accuracy)
trialCount <- only_brms[, .(trials = .N), by = id]
trialCount <- trialCount[trials >= 30]
only_brms <- only_brms[id %in% trialCount$id]
only_animation <- only_animation[id %in% trialCount$id]
# Exclude outlier trials per subject
only_brms[, zrt := scale(rt), by = id]  #ask yaniv: should i scale again after removing extreme z scores?
only_brms <- only_brms[abs(zrt) < 3]
brms_summary <- only_brms[, .(brms_rt = mean(rt), distance = mean(distance)), by = id]
# Clean CB data -------
only_animation[is.na(rt), success := NA] # make all 60 s trials unanswered instead of FALSE (or TRUE)
cb_num_wrongs <- only_animation[,.(cb_num_wrongs = sum(success == FALSE, na.rm = T)), by = id] # count number of wrong answers with response
only_animation <- only_animation[success == TRUE | is.na(success)] # remove all false trials with response ("guesses")
cb_acc <- only_animation[,.(cb_acc = sum(success == TRUE, na.rm = TRUE)/30), by = id] # returns cb correct rate (after removal of false guesses)
cb_rt <- only_animation[success == TRUE, .(cb_rt = mean(rt, na.rm = T)), by = id]
only_animation[is.na(success), rt := 60000]
cb_rt_with_unanswered_trials <- only_animation[, .(cb_rt_with_unfinished = mean(rt, na.rm = T)), by = id]
cb_summary <- merge(cb_rt, cb_acc) %>%
merge(cb_num_wrongs) %>%
merge(cb_rt_with_unanswered_trials)
all_summary <- merge(brms_summary, cb_summary, by = 'id')
only_animation <- merge(all_summary[,.(brms_rt, id)], only_animation) # add mean brms score for each sbj
boxplot(rt~id, data= only_animation)
boxplot(rt~id, data= only_brms)
# Violin plot for BRMS average RT per subject
p <- ggplot(brms_summary, aes(x=as.factor(1), y=brms_rt)) +
geom_violin()
p + geom_jitter(shape=16, position=position_jitter(0.03)) +
stat_summary(fun.y=mean, geom="point", shape=23, size=3, color = "red")
p2 <- ggplot(cb_summary, aes(x=as.factor(1), y=cb_rt)) +
geom_violin()
p2 + geom_jitter(shape=16, position=position_jitter(0.03)) +
stat_summary(fun.y=mean, geom="point", shape=23, size=3, color = "red")
p3 <- ggplot(cb_summary, aes(x=as.factor(1), y=cb_rt_with_unfinished)) +
geom_violin()
p3 + geom_jitter(shape=16, position=position_jitter(0.03)) +
stat_summary(fun.y=mean, geom="point", shape=23, size=3, color = "red")
# histogram of average CB RT including unanswered trials as 60 s
h = hist(cb_summary$cb_rt_with_unfinished/1000, breaks = c(seq(from = 0, to = 30, by = 2.5)), plot = F) # or hist(x,plot=FALSE) to avoid the plot of the histogram
h$density = h$counts/sum(h$counts)*100
plot(h,freq=FALSE)
abline(v = mean(cb_summary$cb_rt_with_unfinished/1000), col = 'red')
# histogram of average CB RT *not* including unanswered trials
h = hist(cb_summary$cb_rt/1000, breaks = c(seq(from = 0, to = 30, by = 2.5)), plot = F) # or hist(x,plot=FALSE) to avoid the plot of the histogram
h$density = h$counts/sum(h$counts)*100
plot(h,freq=FALSE)
abline(v = mean(cb_summary$cb_rt/1000), col = 'red')
# Connection between CB acc and CB RT
cor.test(all_summary$cb_rt, all_summary$cb_rt_with_unfinished)
ggplot(all_summary, aes(x = cb_rt, y = cb_rt_with_unfinished)) +
geom_point() +
geom_smooth(method='lm')
cor.test(all_summary$cb_rt, all_summary$cb_acc)
ggplot(all_summary, aes(x = cb_rt, y = cb_acc)) +
geom_point() +
geom_smooth(method='lm')
cor.test(all_summary$cb_rt_with_unfinished, all_summary$cb_acc)
ggplot(all_summary, aes(x = cb_rt_with_unfinished, y = cb_acc)) +
geom_point() +
geom_smooth(method='lm')
# Make BRMS quentiles
library(dplyr)
all_summary$brms_quentile <- ntile(all_summary$brms_rt, 10)
only_animation <- merge(only_animation, all_summary[, c("id","brms_quentile")], by="id")
# MAKE CB CUMULATIVE % CORRECT GRAPH PER SUBJECT ----
only_animation[is.na(success), rt := 99999] # make all unanswered trials have like infinate rt for asimptote in 60 s
only_animation <- only_animation[, brms_rt:=as.double(brms_rt)] # make rt column as double instead of string
mid <- mean(all_summary$brms_rt)
d.f <- arrange(only_animation,brms_rt,rt)
d.f.ecdf <- ddply(d.f, .(brms_rt), transform, ecdf=ecdf(rt)(rt) )
p <- ggplot( d.f.ecdf, aes(rt, ecdf, group = brms_quentile, colour = brms_rt))
p + geom_line() + coord_cartesian(xlim = c(0, 60000), ylim = c(0, 1)) + scale_color_gradient2( low = "red", midpoint = mid, mid = "white",  #can use scale_color_gradient2 as well
high = "black", space = "Lab" ) +
ggtitle('Accumulated CB proportion correct at each time point per participant') +
xlab ('Cut-off point (ms)') + ylab ('% Correct')
d.f.ecdf <- ddply(d.f, .(brms_rt), transform, ecdf=ecdf(rt)(rt) )
p <- ggplot( d.f.ecdf, aes(rt, ecdf, group = id, colour = brms_rt))
p + geom_line() + coord_cartesian(xlim = c(0, 60000), ylim = c(0, 1)) + scale_color_gradient2( low = "red", midpoint = mid, mid = "white",  #can use scale_color_gradient2 as well
high = "black", space = "Lab" ) +
ggtitle('Accumulated CB proportion correct at each time point per participant') +
xlab ('Cut-off point (ms)') + ylab ('% Correct')
#mid <- mean(all_summary$brms_rt)
d.f <- only_animation[brms_quentile > 7 | brms_quentile < 4]
d.f <- arrange(d.f,brms_quentile,rt)
require(RColorBrewer)
brewer.pal(9, "Set1")
d.f.ecdf <- ddply(d.f, .(brms_quentile), transform, ecdf=ecdf(rt)(rt) )
p <- ggplot( d.f.ecdf, aes(rt, ecdf, group = brms_quentile, colour = factor(brms_quentile)))
p + geom_line() + coord_cartesian(xlim = c(0, 60000), ylim = c(0, 1)) +
ggtitle('Accumulated CB proportion correct at each time point per brms decile') +
xlab ('Cut-off point (ms)') + ylab ('% Correct') +
scale_fill_brewer(palette="Set1")
brewer.pal(1, "Set1")
brewer.pal(6, "Set1")
d.f.ecdf <- ddply(d.f, .(brms_quentile), transform, ecdf=ecdf(rt)(rt) )
p <- ggplot( d.f.ecdf, aes(rt, ecdf, group = brms_quentile, colour = factor(brms_quentile)))
p + geom_line() + coord_cartesian(xlim = c(0, 60000), ylim = c(0, 1)) +
ggtitle('Accumulated CB proportion correct at each time point per brms decile') +
xlab ('Cut-off point (ms)') + ylab ('% Correct') +
scale_fill_brewer(palette="Set1")
group.colors <- c(A = "#333BFF", B = "#CC6600", C ="#9633FF", D = "#E2FF33", E = "#E3DB71")
d.f.ecdf <- ddply(d.f, .(brms_quentile), transform, ecdf=ecdf(rt)(rt) )
p <- ggplot( d.f.ecdf, aes(rt, ecdf, group = brms_quentile, colour = factor(brms_quentile)))
p + geom_line() + coord_cartesian(xlim = c(0, 60000), ylim = c(0, 1)) +
ggtitle('Accumulated CB proportion correct at each time point per brms decile') +
xlab ('Cut-off point (ms)') + ylab ('% Correct') +
#Specify colours
scale_fill_manual(values=group.colors)
group.colors <- c(A = "#33FF", B = "#AC6600", C ="#9633DF", D = "#E2FF33", E = "#E3DB71")
d.f.ecdf <- ddply(d.f, .(brms_quentile), transform, ecdf=ecdf(rt)(rt) )
p <- ggplot( d.f.ecdf, aes(rt, ecdf, group = brms_quentile, colour = factor(brms_quentile)))
p + geom_line() + coord_cartesian(xlim = c(0, 60000), ylim = c(0, 1)) +
ggtitle('Accumulated CB proportion correct at each time point per brms decile') +
xlab ('Cut-off point (ms)') + ylab ('% Correct') +
#Specify colours
scale_fill_manual(values=group.colors)
p <- ggplot( d.f.ecdf, aes(rt, ecdf, group = brms_quentile, colour = c('red', 'green', 'blue', 'black', 'white', 'brown')))
p + geom_line() + coord_cartesian(xlim = c(0, 60000), ylim = c(0, 1)) +
ggtitle('Accumulated CB proportion correct at each time point per brms decile') +
xlab ('Cut-off point (ms)') + ylab ('% Correct') +
#Specify colours
scale_fill_manual(values=group.colors)
cor.test(all_summary$brms_rt, all_summary$cb_rt)
d.f.ecdf <- ddply(d.f, .(brms_quentile), transform, ecdf=ecdf(rt)(rt) )
p <- ggplot( d.f.ecdf, aes(rt, ecdf, group = brms_quentile, colour = c('red', 'green', 'blue', 'black', 'white', 'brown')))
p + geom_line() + coord_cartesian(xlim = c(0, 60000), ylim = c(0, 1)) +
ggtitle('Accumulated CB proportion correct at each time point per brms decile') +
xlab ('Cut-off point (ms)') + ylab ('% Correct') +
#Specify colours
scale_fill_manual(values=group.colors)
d.f.ecdf <- ddply(d.f, .(brms_quentile), transform, ecdf=ecdf(rt)(rt) )
p <- ggplot( d.f.ecdf, aes(rt, ecdf, group = brms_quentile, colour = factor(brms_quentile)))
p + geom_line() + coord_cartesian(xlim = c(0, 60000), ylim = c(0, 1)) +
ggtitle('Accumulated CB proportion correct at each time point per brms decile') +
xlab ('Cut-off point (ms)') + ylab ('% Correct') +
#Specify colours
scale_fill_manual(values=group.colors)
d.f.ecdf <- ddply(d.f, .(brms_quentile), transform, ecdf=ecdf(rt)(rt) )
p <- ggplot( d.f.ecdf, aes(rt, ecdf, group = brms_quentile, colour = (brms_quentile)))
p + geom_line() + coord_cartesian(xlim = c(0, 60000), ylim = c(0, 1)) +
ggtitle('Accumulated CB proportion correct at each time point per brms decile') +
xlab ('Cut-off point (ms)') + ylab ('% Correct') +
#Specify colours
scale_fill_manual(values=group.colors)
myPal <- c( 'royalblue4', 'lightsteelblue1', 'sienna1', 'red', 'yellow', 'white')
myPal <- c( 'royalblue4', 'lightsteelblue1', 'sienna1', 'red', 'yellow', 'white')
d.f.ecdf <- ddply(d.f, .(brms_quentile), transform, ecdf=ecdf(rt)(rt) )
p <- ggplot( d.f.ecdf, aes(rt, ecdf, group = brms_quentile, colour = (brms_quentile)))
p + geom_line() + coord_cartesian(xlim = c(0, 60000), ylim = c(0, 1)) +
ggtitle('Accumulated CB proportion correct at each time point per brms decile') +
xlab ('Cut-off point (ms)') + ylab ('% Correct') +
scale_color_manual(values = myPal)
d.f.ecdf <- ddply(d.f, .(brms_quentile), transform, ecdf=ecdf(rt)(rt) )
p <- ggplot( d.f.ecdf, aes(rt, ecdf, group = brms_quentile, colour = factor(brms_quentile)))
p + geom_line() + coord_cartesian(xlim = c(0, 60000), ylim = c(0, 1)) +
ggtitle('Accumulated CB proportion correct at each time point per brms decile') +
xlab ('Cut-off point (ms)') + ylab ('% Correct') +
scale_color_manual(values = myPal)
d.f.ecdf <- ddply(d.f, .(brms_quentile), transform, ecdf=ecdf(rt)(rt) )
p <- ggplot( d.f.ecdf, aes(rt, ecdf, group = brms_quentile, colour = factor(brms_quentile)))
p + geom_line() + coord_cartesian(xlim = c(0, 60000), ylim = c(0, 1)) + scale_color_brewer(type = "div", palette = "RDYlGn") +
ggtitle('Accumulated CB proportion correct at each time point per brms decile') +
xlab ('Cut-off point (ms)') + ylab ('% Correct') +
scale_color_manual(values = myPal)
d.f.ecdf <- ddply(d.f, .(brms_quentile), transform, ecdf=ecdf(rt)(rt) )
p <- ggplot( d.f.ecdf, aes(rt, ecdf, group = brms_quentile, colour = factor(brms_quentile)))
p + geom_line() + coord_cartesian(xlim = c(0, 60000), ylim = c(0, 1)) + scale_color_brewer(type = "div", palette = "RDYiGn") +
ggtitle('Accumulated CB proportion correct at each time point per brms decile') +
xlab ('Cut-off point (ms)') + ylab ('% Correct') +
scale_color_manual(values = myPal)
d.f.ecdf <- ddply(d.f, .(brms_quentile), transform, ecdf=ecdf(rt)(rt) )
p <- ggplot( d.f.ecdf, aes(rt, ecdf, group = brms_quentile, colour = factor(brms_quentile)))
p + geom_line() + coord_cartesian(xlim = c(0, 60000), ylim = c(0, 1)) + scale_color_brewer(palette = "RDYiGn") +
ggtitle('Accumulated CB proportion correct at each time point per brms decile') +
xlab ('Cut-off point (ms)') + ylab ('% Correct') +
scale_color_manual(values = myPal)
d.f.ecdf <- ddply(d.f, .(brms_quentile), transform, ecdf=ecdf(rt)(rt) )
p <- ggplot( d.f.ecdf, aes(rt, ecdf, group = brms_quentile, colour = factor(brms_quentile)))
p + geom_line() + coord_cartesian(xlim = c(0, 60000), ylim = c(0, 1)) + scale_color_brewer(palette = "RDYiGn") +
ggtitle('Accumulated CB proportion correct at each time point per brms decile') +
xlab ('Cut-off point (ms)') + ylab ('% Correct')
d.f.ecdf <- ddply(d.f, .(brms_quentile), transform, ecdf=ecdf(rt)(rt) )
p <- ggplot( d.f.ecdf, aes(rt, ecdf, group = brms_quentile, colour = factor(brms_quentile)))
p + geom_line() + coord_cartesian(xlim = c(0, 60000), ylim = c(0, 1)) + scale_color_brewer(palette = "RDYlGn") +
ggtitle('Accumulated CB proportion correct at each time point per brms decile') +
xlab ('Cut-off point (ms)') + ylab ('% Correct')
p <- ggplot( d.f.ecdf, aes(rt, ecdf, group = brms_quentile, colour = factor(brms_quentile)))
p + geom_line() + coord_cartesian(xlim = c(0, 60000), ylim = c(0, 1)) + scale_color_brewer(type = "div", palette = "RDYlGn") +
ggtitle('Accumulated CB proportion correct at each time point per brms decile') +
xlab ('Cut-off point (ms)') + ylab ('% Correct')
d.f.ecdf <- ddply(d.f, .(brms_quentile), transform, ecdf=ecdf(rt)(rt) )
p <- ggplot( d.f.ecdf, aes(rt, ecdf, group = brms_quentile, colour = factor(brms_quentile)))
p + geom_line() + coord_cartesian(xlim = c(0, 60000), ylim = c(0, 1)) + scale_color_brewer(type = "div", palette = "Dark2") +
ggtitle('Accumulated CB proportion correct at each time point per brms decile') +
xlab ('Cut-off point (ms)') + ylab ('% Correct')
d.f.ecdf <- ddply(d.f, .(brms_quentile), transform, ecdf=ecdf(rt)(rt) )
p <- ggplot( d.f.ecdf, aes(rt, ecdf, group = brms_quentile, colour = factor(brms_quentile)))
p + geom_line() + coord_cartesian(xlim = c(0, 60000), ylim = c(0, 1)) + scale_color_brewer(type = "div", palette = "RdBu") +
ggtitle('Accumulated CB proportion correct at each time point per brms decile') +
xlab ('Cut-off point (ms)') + ylab ('% Correct')
#mid <- mean(all_summary$brms_rt)
d.f <- only_animation[brms_quentile > 8 | brms_quentile < 3]
d.f <- arrange(d.f,brms_quentile,rt)
d.f.ecdf <- ddply(d.f, .(brms_quentile), transform, ecdf=ecdf(rt)(rt) )
p <- ggplot( d.f.ecdf, aes(rt, ecdf, group = brms_quentile, colour = factor(brms_quentile)))
p + geom_line() + coord_cartesian(xlim = c(0, 60000), ylim = c(0, 1)) + scale_color_brewer(type = "div", palette = "RdBu") +
ggtitle('Accumulated CB proportion correct at each time point per brms decile') +
xlab ('Cut-off point (ms)') + ylab ('% Correct')
d.f.ecdf <- ddply(d.f, .(brms_quentile), transform, ecdf=ecdf(rt)(rt) )
p <- ggplot( d.f.ecdf, aes(rt, ecdf, group = brms_quentile, colour = factor(brms_quentile)))
p + geom_line() + coord_cartesian(xlim = c(0, 60000), ylim = c(0, 1)) + scale_color_brewer(type = "div", palette = "RdBu") +
ggtitle('Accumulated CB proportion correct at each time point per brms decile') +
xlab ('Cut-off point (ms)') + ylab ('% Correct')
d.f.ecdf <- ddply(d.f, .(brms_quentile), transform, ecdf=ecdf(rt)(rt) )
d.f.ecdf <- ddply(d.f, .(brms_quentile), transform, ecdf=ecdf(rt)(rt) )
p <- ggplot( d.f.ecdf, aes(rt, ecdf, group = brms_quentile, colour = factor(brms_quentile)))
p + geom_line() + coord_cartesian(xlim = c(0, 60000), ylim = c(0, 1)) +
ggtitle('Accumulated CB proportion correct at each time point per brms decile') +
xlab ('Cut-off point (ms)') + ylab ('% Correct')
d.f.ecdf <- ddply(d.f, .(brms_quentile), transform, ecdf=ecdf(rt)(rt) )
p <- ggplot( d.f.ecdf, aes(rt, ecdf, group = brms_quentile, colour = factor(brms_quentile)))
p + geom_line() + coord_cartesian(xlim = c(0, 60000), ylim = c(0, 1)) + scale_color_brewer(type = "div", palette = "RdBu") +
ggtitle('Accumulated CB proportion correct at each time point per brms decile') +
xlab ('Cut-off point (ms)') + ylab ('% Correct')
View(all_summary)
all_summary[brms_quentile > 8 | brms_quentile < 3]
all_summary[brms_quentile > 8 | brms_quentile < 3]$brms_rt
cor.test(all_summary[brms_quentile > 8 | brms_quentile < 3]$brms_rt, all_summary[brms_quentile > 8 | brms_quentile < 3]$cb_rt)
ggplot(all_summary[brms_quentile > 8 | brms_quentile < 3], aes(x = brms_rt, y = cb_rt)) +
geom_point() +
geom_smooth(method='lm')
ggplot(all_summary[brms_quentile > 7 | brms_quentile < 4], aes(x = brms_rt, y = cb_rt)) +
geom_point() +
geom_smooth(method='lm')
ggplot(all_summary[brms_quentile > 9 | brms_quentile < 2], aes(x = brms_rt, y = cb_rt)) +
geom_point() +
geom_smooth(method='lm')
ggplot(all_summary[brms_quentile > 9 | brms_quentile < 2], aes(x = brms_rt, y = cb_rt_with_unanswered_trials)) +
geom_point() +
geom_smooth(method='lm')
ggplot(all_summary[brms_quentile > 9 | brms_quentile < 2], aes(x = brms_rt, y = cb_rt_with_unfinished)) +
geom_point() +
geom_smooth(method='lm')
cor.test(all_summary[brms_quentile > 8 | brms_quentile < 3]$brms_rt, all_summary[brms_quentile > 8 | brms_quentile < 3]$cb_rt_with_unfinished)
ggplot(all_summary[brms_quentile > 9 | brms_quentile < 2], aes(x = brms_rt, y = cb_rt_with_unfinished)) +
geom_point() +
geom_smooth(method='lm')
ggplot(all_summary[brms_quentile > 8 | brms_quentile < 3], aes(x = brms_rt, y = cb_rt_with_unfinished)) +
geom_point() +
geom_smooth(method='lm')
cor.test(all_summary[brms_quentile > 8 | brms_quentile < 3]$brms_rt, all_summary[brms_quentile > 8 | brms_quentile < 3]$cb_rt_with_unfinished)
cor.test(all_summary[brms_quentile > 9 | brms_quentile < 2]$brms_rt, all_summary[brms_quentile > 8 | brms_quentile < 3]$cb_rt_with_unfinished)
cor.test(all_summary[brms_quentile > 9 | brms_quentile < 3]$brms_rt, all_summary[brms_quentile > 8 | brms_quentile < 3]$cb_rt_with_unfinished)
cor.test(all_summary[brms_quentile > 8 | brms_quentile < 3]$brms_rt, all_summary[brms_quentile > 8 | brms_quentile < 3]$cb_rt_with_unfinished)
cor.test(all_summary[brms_quentile > 9 | brms_quentile < 2]$brms_rt, all_summary[brms_quentile > 8 | brms_quentile < 3]$cb_rt_with_unfinished)
all_summary[brms_quentile > 9 | brms_quentile < 2]
cor.test(all_summary[brms_quentile > 9 | brms_quentile < 2]$brms_rt, all_summary[brms_quentile > 9 | brms_quentile < 2]$cb_rt_with_unfinished)
cor.test(all_summary[brms_quentile > 7 | brms_quentile < 4]$brms_rt, all_summary[brms_quentile > 7 | brms_quentile < 4]$cb_rt_with_unfinished)
cor.test(all_summary[brms_quentile > 8 | brms_quentile < 3]$brms_rt, all_summary[brms_quentile > 8 | brms_quentile < 3]$cb_rt_with_unfinished)
ggplot(all_summary[brms_quentile > 8 | brms_quentile < 3], aes(x = brms_rt, y = cb_rt_with_unfinished)) +
geom_point() +
geom_smooth(method='lm')
cor.test(all_summary$brms_rt, all_summary$cb_rt_with_unfinished)
ggplot(all_summary, aes(x = brms_rt, y = cb_rt_with_unfinished)) +
geom_point() +
geom_smooth(method='lm')
View(brms_summary)
# histogram of average BRMS
h = hist(all_summary$brms_rt, breaks = c(seq(from = 0, to = 30000, by = 1000)), plot = F) # or hist(x,plot=FALSE) to avoid the plot of the histogram
h$density = h$counts/sum(h$counts)*100
plot(h,freq=FALSE)
abline(v = mean(all_summary$brms_rt), col = 'red')
# histogram of average BRMS
h = hist(all_summary$brms_rt, breaks = c(seq(from = 0, to = 30000, by = 2000)), plot = F) # or hist(x,plot=FALSE) to avoid the plot of the histogram
plot(h,freq=FALSE)
h$density = h$counts/sum(h$counts)*100
abline(v = mean(all_summary$brms_rt), col = 'red')
View(only_brms)
# histogram of average CB RT including unanswered trials as 60 s
h = hist(cb_summary$cb_rt_with_unfinished/1000, breaks = c(seq(from = 0, to = 30, by = 2.5)), plot = F) # or hist(x,plot=FALSE) to avoid the plot of the histogram
h$density = h$counts/sum(h$counts)*100
plot(h,freq=FALSE)
abline(v = mean(cb_summary$cb_rt_with_unfinished/1000), col = 'red')
# histogram of average CB RT *not* including unanswered trials
h = hist(cb_summary$cb_rt/1000, breaks = c(seq(from = 0, to = 30, by = 2.5)), plot = F) # or hist(x,plot=FALSE) to avoid the plot of the histogram
h$density = h$counts/sum(h$counts)*100
plot(h,freq=FALSE)
abline(v = mean(cb_summary$cb_rt/1000), col = 'red')
# Check kendall tau of BRMS and CB RT
plot(all_summary$brms_rt, all_summary$cb_rt_with_unfinished, col = "blue")
kendall.tau(all_summary$brms_rt, all_summary$cb_rt_with_unfinished)
install.packages("vgam")
y
Y
cor.test(all_summary$brms_rt, all_summary$cb_rt_with_unfinished, method = "kendall")
cor.test(all_summary$brms_rt, all_summary$cb_rt, method = "kendall")
#mid <- mean(all_summary$brms_rt)
d.f <- only_animation[brms_quentile > 8 | brms_quentile < 3]
d.f <- arrange(d.f,brms_quentile,rt)
d.f.ecdf <- ddply(d.f, .(brms_quentile), transform, ecdf=ecdf(rt)(rt) )
p + geom_line() + coord_cartesian(xlim = c(0, 60000), ylim = c(0, 1)) + scale_color_brewer(type = "div", palette = "RdBu") +
ggtitle('Accumulated CB proportion correct at each time point per brms decile') +
xlab ('Cut-off point (ms)') + ylab ('% Correct')
p <- ggplot( d.f.ecdf, aes(rt, ecdf, group = brms_quentile, colour = factor(brms_quentile)))
only_middle <- only_animation[brms_quentile < 9 | brms_quentile > 2]
View(only_middle)
only_middle <- only_animation[brms_quentile < 9 & brms_quentile > 2]
View(only_middle)
only_middle <- arrange(only_middle,brms_quentile,rt)
d.f <- arrange(only_middle,brms_quentile,rt)
p <- ggplot( d.f.ecdf, aes(rt, ecdf, group = brms_quentile, colour = factor(brms_quentile)))
p + geom_line() + coord_cartesian(xlim = c(0, 60000), ylim = c(0, 1)) + scale_color_brewer(type = "div", palette = "RdBu") +
ggtitle('Accumulated CB proportion correct at each time point per brms decile') +
xlab ('Cut-off point (ms)') + ylab ('% Correct')
d.f <- arrange(only_middle,brms_quentile,rt)
d.f.ecdf <- ddply(d.f, .(brms_quentile), transform, ecdf=ecdf(rt)(rt) )
p <- ggplot( d.f.ecdf, aes(rt, ecdf, group = brms_quentile, colour = factor(brms_quentile)))
p + geom_line() + coord_cartesian(xlim = c(0, 60000), ylim = c(0, 1)) + scale_color_brewer(type = "div", palette = "RdBu") +
ggtitle('Accumulated CB proportion correct at each time point per brms decile') +
xlab ('Cut-off point (ms)') + ylab ('% Correct')
d.f.ecdf <- ddply(d.f, transform, ecdf=ecdf(rt)(rt) )
d.f.ecdf <- ddply(d.f, .(trial_type), transform, ecdf=ecdf(rt)(rt) )
p <- ggplot( d.f.ecdf, aes(rt, ecdf, group = brms_quentile, colour = factor(brms_quentile)))
p + geom_line() + coord_cartesian(xlim = c(0, 60000), ylim = c(0, 1)) + scale_color_brewer(type = "div", palette = "RdBu") +
ggtitle('Accumulated CB proportion correct at each time point per brms decile') +
xlab ('Cut-off point (ms)') + ylab ('% Correct')
d.f.ecdf <- ddply(d.f, .(trial_type), transform, ecdf=ecdf(rt)(rt) )
p <- ggplot( d.f.ecdf, aes(rt, ecdf, group = brms_quentile))
p + geom_line() + coord_cartesian(xlim = c(0, 60000), ylim = c(0, 1)) + scale_color_brewer(type = "div", palette = "RdBu") +
ggtitle('Accumulated CB proportion correct at each time point per brms decile') +
xlab ('Cut-off point (ms)') + ylab ('% Correct')
d.f <- arrange(only_middle,brms_rt,rt)
View(d.f)
View(d.f)
d.f <- arrange(only_middle,id,rt)
d.f.ecdf <- ddply(d.f, .(id), transform, ecdf=ecdf(rt)(rt) )
View(d.f.ecdf)
typeof(d.f.ecdf)
is.data.frame(d.f.ecdf)
is.data.table(d.f.ecdf)
is.data.table(only_animation)
is.data.table(d.f)
d.f.ecdf <- ddply(d.f, .(id), transform, ecdf=ecdf(rt)(rt) )
p <- ggplot( d.f.ecdf, aes(rt, ecdf, group = brms_quentile))
p + geom_line() + coord_cartesian(xlim = c(0, 60000), ylim = c(0, 1)) +
ggtitle('Accumulated CB proportion correct at each time point per brms decile') +
xlab ('Cut-off point (ms)') + ylab ('% Correct')
only_middle <- only_animation[brms_quentile < 9 & brms_quentile > 2]
d.f <- arrange(only_middle,id,rt)
d.f.ecdf <- ddply(d.f, .(id), transform, ecdf=ecdf(rt)(rt) )
p <- ggplot( d.f.ecdf, aes(rt, ecdf, group = brms_quentile))
p + geom_line() + coord_cartesian(xlim = c(0, 60000), ylim = c(0, 1)) +
ggtitle('Accumulated CB proportion correct at each time point per brms decile') +
xlab ('Cut-off point (ms)') + ylab ('% Correct')
only_middle <- only_animation[brms_quentile < 9 & brms_quentile > 2]
d.f <- arrange(only_middle,id,rt)
p <- ggplot( d.f.ecdf, aes(rt, ecdf, group = trial_type))
p + geom_line() + coord_cartesian(xlim = c(0, 60000), ylim = c(0, 1)) +
ggtitle('Accumulated CB proportion correct at each time point per brms decile') +
xlab ('Cut-off point (ms)') + ylab ('% Correct')
d.f <- arrange(only_middle,id,rt)
d.f.ecdf <- ddply(d.f, .(trial_type), transform, ecdf=ecdf(rt)(rt) )
p <- ggplot( d.f.ecdf, aes(rt, ecdf, group = trial_type))
p + geom_line() + coord_cartesian(xlim = c(0, 60000), ylim = c(0, 1)) +
ggtitle('Accumulated CB proportion correct at each time point per brms decile') +
xlab ('Cut-off point (ms)') + ylab ('% Correct')
